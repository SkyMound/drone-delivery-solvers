/** 
 * 
 */
package drone_delivery.solver
import io.sarl.api.core.Initialize
import io.sarl.api.core.Logging
import org.arakhne.afc.math.geometry.d2.d.Vector2d
import io.sarl.api.core.DefaultContextInteractions
import io.sarl.api.core.Schedules
import io.sarl.api.core.Lifecycle
import java.util.concurrent.ConcurrentHashMap
import java.util.UUID
import java.util.List

/** 
 * 
 */
agent Depot {
	uses Logging, DefaultContextInteractions, Schedules, Lifecycle

	var environment : UUID
	
	var position : Vector2d
	var drones : ConcurrentHashMap<UUID,PerceivedDroneBody>
	var todeliver : List<Parcel>
	var parcelToCreate : List<Parcel>
	

	on Initialize {
	// Depot init parameters : UUID envt, Vector2d initialPosition, String name,cityfile name
	if (occurrence.parameters.size > 2) {
		if (occurrence.parameters.get(0) instanceof UUID) {
			environment = occurrence.parameters.get(0) as UUID
		}

		if (occurrence.parameters.get(1) instanceof Vector2d) {
			position = occurrence.parameters.get(1) as Vector2d
		}
		if (occurrence.parameters.get(2) instanceof String) {
			loggingName = occurrence.parameters.get(2) as String
		}
		if (occurrence.parameters.get(3) instanceof List) {
			var cityFilename = occurrence.parameters.get(3) as List<Parcel>
		}
//		if (occurrence.parameters.get(3) instanceof List) {
//			var cityFilename = occurrence.parameters.get(3) as List<Parcel>
//		}
//		if (occurrence.parameters.get(4) instanceof List) {
//			var parcelFilename = occurrence.parameters.get(4) as String
//		}

		
		}
		this.position=Settings::DepotPos
				
	}


}
